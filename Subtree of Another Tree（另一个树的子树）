/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */

//思路：进行遍历比较元素是否相等。
bool isSameTree(struct TreeNode* p, struct TreeNode* q){
    //如果两个根同时为空，返回true
    if (p == NULL && q == NULL)
        return true;
    //有一个为空，另一个不为空返回false
    if (p == NULL || q == NULL)
        return false;
    //如果值不相等返回false
    if (p->val != q->val)
        return false;
    //如果左右元素相等是true
    return isSameTree(p->left, q->left) && isSameTree(p->right, q->right);
}

bool isSubtree(struct TreeNode* root, struct TreeNode* subRoot){
    //里面再套一层递归
    if (root == NULL)
        return false;
    if (isSameTree(root, subRoot))
        return true;
    //如果有一个子树是相同的，那么就返回true
    return isSubtree(root->left, subRoot)||
        isSubtree(root->right, subRoot);
}

https://leetcode.cn/problems/subtree-of-another-tree/description/
