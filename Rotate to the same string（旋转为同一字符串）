int findRound(const char * src, char * find)
{
	char tmp[256] = { 0 }; //用一个辅助空间将原字符串做成两倍原字符串
	strcpy(tmp, src); //先拷贝一遍
	strcat(tmp, src); //再连接一遍
	return strstr(tmp, find) != NULL; //看看找不找得到
}

#include<stdio.h>
#include<string.h>

int judge_char(char s1[], char s2[], int len)
{
	int i = 0;
	for (i = 0; i < len; i++)
	{
		char ch = s1[0];
		int j = 0;
		for (j = 0; j < len - 1; j++)
		{
			s1[j] = s1[j + 1];
		}
		s1[j] = ch;
		int n = 0;
		int k = 0;
		for (n = 0; n < len; n++)
		{
			if (s1[n] == s2[n])
				k++;
		}
		if (k == len)
			return 1;
	}
	for (i = 0; i < len; i++)
	{
		char ch = s2[len - 1];
		int j = 0;
		for (j = len - 2; j > 0; j--)
		{
			s1[j + 1] = s2[j];
		}
		s2[0] = ch;
		int n = 0;
		int k = 0;
		for (n = 0; n < len; n++)
		{
			if (s1[n] == s2[n])
				k++;
		}
		if (k == len)
			return 1;
	}
	return 0;
}
int main()
{
	char s1[10] = " ";
	char s2[10] = " ";
	gets(s1);
	gets(s2);
	const int len = strlen(s1);
	int ret = judge_char(s1, s2, len);
	if (ret == 1)
		printf("Yes");
	else
		printf("No");
	return 0;
}
